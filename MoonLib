-- MoonLib v3.0 - Complete UI Library with Key System
local MoonLib = {}
MoonLib.__index = MoonLib

-- Анимация загрузки
local function CreateLoadingAnimation(parent)
    local loadingFrame = Instance.new("Frame")
    loadingFrame.Name = "LoadingFrame"
    loadingFrame.Size = UDim2.new(1, 0, 1, 0)
    loadingFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
    loadingFrame.BackgroundTransparency = 0.2
    loadingFrame.ZIndex = 1000
    loadingFrame.Parent = parent

    local uiCorner = Instance.new("UICorner")
    uiCorner.CornerRadius = UDim.new(0, 8)
    uiCorner.Parent = loadingFrame

    local loadingText = Instance.new("TextLabel")
    loadingText.Name = "LoadingText"
    loadingText.Text = "MoonLib Loading..."
    loadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
    loadingText.TextSize = 18
    loadingText.Font = Enum.Font.GothamSemibold
    loadingText.BackgroundTransparency = 1
    loadingText.Size = UDim2.new(0, 200, 0, 30)
    loadingText.Position = UDim2.new(0.5, -100, 0.5, -15)
    loadingText.ZIndex = 1001
    loadingText.Parent = loadingFrame

    local moonIcon = Instance.new("ImageLabel")
    moonIcon.Name = "MoonIcon"
    moonIcon.Image = "rbxassetid://10734969510"
    moonIcon.BackgroundTransparency = 1
    moonIcon.Size = UDim2.new(0, 50, 0, 50)
    moonIcon.Position = UDim2.new(0.5, -25, 0.5, -80)
    moonIcon.ZIndex = 1001
    moonIcon.Parent = loadingFrame

    local spinTween = game:GetService("TweenService"):Create(
        moonIcon,
        TweenInfo.new(2, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1),
        {Rotation = 360}
    )
    spinTween:Play()

    return {
        Destroy = function()
            spinTween:Cancel()
            loadingFrame:Destroy()
        end
    }
end

-- Определяем тип устройства
local isMobile = (function()
    if game:GetService("UserInputService").TouchEnabled and not game:GetService("UserInputService").KeyboardEnabled then
        return true
    end
    return false
end)()

-- Инициализация с Key System
function MoonLib:Init(options)
    options = options or {}
    
    -- Создаем анимацию загрузки
    local loadingAnimation
    if not options.DisableLoading then
        local tempGui = Instance.new("ScreenGui")
        tempGui.Name = "MoonLibTempGui"
        tempGui.Parent = game:GetService("CoreGui") or game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
        loadingAnimation = CreateLoadingAnimation(tempGui)
    end
    
    -- Проверяем Key System
    if options.KeySystem then
        local keyValid = false
        
        -- GUI для ввода ключа
        local keyInputGui = Instance.new("ScreenGui")
        keyInputGui.Name = "MoonLibKeyInput"
        keyInputGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        keyInputGui.Parent = game:GetService("CoreGui") or game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
        
        local keyFrame = Instance.new("Frame")
        keyFrame.Size = UDim2.new(0, 300, 0, 200)
        keyFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
        keyFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
        keyFrame.BackgroundTransparency = 0.1
        keyFrame.Parent = keyInputGui
        
        local uiCorner = Instance.new("UICorner")
        uiCorner.CornerRadius = UDim.new(0, 8)
        uiCorner.Parent = keyFrame
        
        local title = Instance.new("TextLabel")
        title.Text = "MoonLib Key System"
        title.TextColor3 = Color3.fromRGB(255, 255, 255)
        title.TextSize = 18
        title.Font = Enum.Font.GothamSemibold
        title.BackgroundTransparency = 1
        title.Size = UDim2.new(0, 200, 0, 30)
        title.Position = UDim2.new(0.5, -100, 0.1, 0)
        title.Parent = keyFrame
        
        local inputBox = Instance.new("TextBox")
        inputBox.PlaceholderText = "Enter key..."
        inputBox.Text = ""
        inputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
        inputBox.BackgroundColor3 = Color3.fromRGB(50, 50, 60)
        inputBox.Size = UDim2.new(0, 250, 0, 40)
        inputBox.Position = UDim2.new(0.5, -125, 0.4, 0)
        inputBox.Font = Enum.Font.Gotham
        inputBox.TextSize = 16
        inputBox.Parent = keyFrame
        
        local uiCorner2 = Instance.new("UICorner")
        uiCorner2.CornerRadius = UDim.new(0, 4)
        uiCorner2.Parent = inputBox
        
        local submitButton = Instance.new("TextButton")
        submitButton.Text = "Submit"
        submitButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        submitButton.TextSize = 16
        submitButton.Font = Enum.Font.GothamSemibold
        submitButton.BackgroundColor3 = Color3.fromRGB(136, 114, 255)
        submitButton.Size = UDim2.new(0, 100, 0, 35)
        submitButton.Position = UDim2.new(0.5, -50, 0.7, 0)
        submitButton.Parent = keyFrame
        
        local uiCorner3 = Instance.new("UICorner")
        uiCorner3.CornerRadius = UDim.new(0, 4)
        uiCorner3.Parent = submitButton
        
        local messageLabel = Instance.new("TextLabel")
        messageLabel.Text = ""
        messageLabel.TextColor3 = Color3.fromRGB(255, 100, 100)
        messageLabel.TextSize = 14
        messageLabel.Font = Enum.Font.Gotham
        messageLabel.BackgroundTransparency = 1
        messageLabel.Size = UDim2.new(0, 250, 0, 20)
        messageLabel.Position = UDim2.new(0.5, -125, 0.85, 0)
        messageLabel.Parent = keyFrame
        
        -- Ожидаем ввода ключа
        local keyValidated = false
        submitButton.MouseButton1Click:Connect(function()
            local key = inputBox.Text
            if options.KeySystem.Validate(key) then
                keyValidated = true
                keyInputGui:Destroy()
                if loadingAnimation then loadingAnimation.Destroy() end
            else
                messageLabel.Text = "Invalid key, please try again"
                task.wait(2)
                messageLabel.Text = ""
            end
        end)
        
        -- Если ключ не нужен (например, для whitelist)
        if options.KeySystem.Keys then
            repeat task.wait() until keyValidated
        else
            keyInputGui:Destroy()
            if loadingAnimation then loadingAnimation.Destroy() end
        end
    elseif loadingAnimation then
        loadingAnimation.Destroy()
    end
    
    -- Инициализация библиотеки
    local self = setmetatable({
        Theme = options.Theme or "Dark",
        AccentColor = options.AccentColor or Color3.fromRGB(136, 114, 255),
        Transparency = options.Transparency or (isMobile and 0.95 or 0.85),
        Version = "3.0",
        _elements = {},
        _notifications = {},
        _keybinds = {},
        _draggableElements = {},
        IsMobile = isMobile,
        ScreenGui = nil,
        KeySystem = options.KeySystem or nil
    }, MoonLib)
    
    self:CreateUI()
    return self
end

-- Остальные функции библиотеки (Window, CreateMinimizeButton и т.д.)
-- ... (вставьте сюда все предыдущие функции из MoonLib v2.0)

-- Key System Helper
MoonLib.KeySystem = {
    new = function(options)
        options = options or {}
        return {
            Keys = options.Keys or nil, -- Список валидных ключей
            Validate = options.Validate or function(key)
                if not options.Keys then return true end -- Если ключи не указаны, пропускаем проверку
                return table.find(options.Keys, key) ~= nil
            end,
            Whitelist = options.Whitelist or false, -- Только для определенных пользователей
            WhitelistCheck = options.WhitelistCheck or function()
                local playerName = game:GetService("Players").LocalPlayer.Name
                return table.find(options.Whitelist or {}, playerName) ~= nil
            end
        }
    end
}

return MoonLib
