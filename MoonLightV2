-- MoonLib UI Library v2
-- By: github.com/Vodi4kasy1

local MoonLib = {}
MoonLib.__index = MoonLib

-- Загрузка шрифтов
if not isfolder("MoonLib") then
    makefolder("MoonLib")
end
if not isfile("MoonLib/GothamBold.ttf") then
    writefile("MoonLib/GothamBold.ttf", game:HttpGet("https://github.com/Vodi4kasy1/myui/raw/main/Fonts/GothamBold.ttf"))
end
if not isfile("MoonLib/GothamMedium.ttf") then
    writefile("MoonLib/GothamMedium.ttf", game:HttpGet("https://github.com/Vodi4kasy1/myui/raw/main/Fonts/GothamMedium.ttf"))
end

-- Создание основного GUI
function MoonLib:CreateWindow(name)
    local Window = {}
    setmetatable(Window, MoonLib)
    
    -- Основные настройки
    Window.Name = name or "MoonLib Window"
    Window.Theme = {
        MainColor = Color3.fromRGB(28, 28, 38),
        SecondaryColor = Color3.fromRGB(38, 38, 48),
        AccentColor = Color3.fromRGB(100, 150, 255),
        TextColor = Color3.fromRGB(255, 255, 255),
        DarkText = Color3.fromRGB(180, 180, 180)
    }
    Window.Tabs = {}
    Window.Visible = true
    
    -- Создание интерфейса
    local gui = Instance.new("ScreenGui")
    gui.Name = "MoonLib_"..tostring(math.random(1000,9999))
    gui.ResetOnSpawn = false
    gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    gui.Parent = game:GetService("CoreGui")
    
    -- Главный фрейм
    local mainFrame = Instance.new("Frame")
    mainFrame.Name = "MainFrame"
    mainFrame.Size = UDim2.new(0, 450, 0, 40)
    mainFrame.Position = UDim2.new(0.5, -225, 0.2, 0)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0)
    mainFrame.BackgroundColor3 = Window.Theme.MainColor
    mainFrame.BorderSizePixel = 0
    mainFrame.ClipsDescendants = true
    mainFrame.Parent = gui
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = mainFrame
    
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Window.Theme.MainColor),
        ColorSequenceKeypoint.new(1, Window.Theme.SecondaryColor)
    })
    gradient.Rotation = 90
    gradient.Parent = mainFrame
    
    -- Заголовок
    local header = Instance.new("TextButton")
    header.Name = "Header"
    header.Size = UDim2.new(1, -80, 0, 40)
    header.Position = UDim2.new(0, 0, 0, 0)
    header.BackgroundTransparency = 1
    header.Text = Window.Name
    header.TextColor3 = Window.Theme.TextColor
    header.Font = Enum.Font.GothamBold
    header.TextSize = 14
    header.TextXAlignment = Enum.TextXAlignment.Left
    header.TextYAlignment = Enum.TextYAlignment.Center
    header.Parent = mainFrame
    
    local headerPadding = Instance.new("UIPadding")
    headerPadding.PaddingLeft = UDim.new(0, 15)
    headerPadding.Parent = header
    
    -- Кнопки управления
    local closeButton = Instance.new("TextButton")
    closeButton.Name = "CloseButton"
    closeButton.Size = UDim2.new(0, 30, 0, 30)
    closeButton.Position = UDim2.new(1, -35, 0, 5)
    closeButton.BackgroundTransparency = 1
    closeButton.Text = "×"
    closeButton.TextColor3 = Window.Theme.TextColor
    closeButton.Font = Enum.Font.GothamBold
    closeButton.TextSize = 20
    closeButton.Parent = mainFrame
    
    local minimizeButton = Instance.new("TextButton")
    minimizeButton.Name = "MinimizeButton"
    minimizeButton.Size = UDim2.new(0, 30, 0, 30)
    minimizeButton.Position = UDim2.new(1, -70, 0, 5)
    minimizeButton.BackgroundTransparency = 1
    minimizeButton.Text = "_"
    minimizeButton.TextColor3 = Window.Theme.TextColor
    minimizeButton.Font = Enum.Font.GothamBold
    minimizeButton.TextSize = 20
    minimizeButton.Parent = mainFrame
    
    local resizeButton = Instance.new("TextButton")
    resizeButton.Name = "ResizeButton"
    resizeButton.Size = UDim2.new(0, 20, 0, 20)
    resizeButton.Position = UDim2.new(1, -25, 1, -25)
    resizeButton.BackgroundTransparency = 1
    resizeButton.Text = "↘"
    resizeButton.TextColor3 = Window.Theme.TextColor
    resizeButton.Font = Enum.Font.GothamBold
    resizeButton.TextSize = 16
    resizeButton.Parent = mainFrame
    
    -- Контент
    local contentFrame = Instance.new("Frame")
    contentFrame.Name = "ContentFrame"
    contentFrame.Size = UDim2.new(1, -10, 1, -50)
    contentFrame.Position = UDim2.new(0, 5, 0, 45)
    contentFrame.BackgroundTransparency = 1
    contentFrame.Parent = mainFrame
    
    -- Табы
    local tabsFrame = Instance.new("Frame")
    tabsFrame.Name = "TabsFrame"
    tabsFrame.Size = UDim2.new(1, 0, 0, 30)
    tabsFrame.BackgroundTransparency = 1
    tabsFrame.Parent = contentFrame
    
    local tabsList = Instance.new("UIListLayout")
    tabsList.FillDirection = Enum.FillDirection.Horizontal
    tabsList.Padding = UDim.new(0, 5)
    tabsList.Parent = tabsFrame
    
    -- Контейнер для страниц
    local pagesFrame = Instance.new("Frame")
    pagesFrame.Name = "PagesFrame"
    pagesFrame.Size = UDim2.new(1, 0, 1, -35)
    pagesFrame.Position = UDim2.new(0, 0, 0, 35)
    pagesFrame.BackgroundTransparency = 1
    pagesFrame.Parent = contentFrame
    
    -- Сохраняем элементы в объект Window
    Window.GUI = gui
    Window.MainFrame = mainFrame
    Window.Header = header
    Window.CloseButton = closeButton
    Window.MinimizeButton = minimizeButton
    Window.ResizeButton = resizeButton
    Window.ContentFrame = contentFrame
    Window.TabsFrame = tabsFrame
    Window.PagesFrame = pagesFrame
    
    -- Функционал
    local isDragging = false
    local isResizing = false
    local dragStartPos = nil
    local frameStartPos = nil
    local resizeStartPos = nil
    local frameStartSize = nil
    
    -- Drag system
    local function startDrag(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isDragging = true
            dragStartPos = Vector2.new(input.Position.X, input.Position.Y)
            frameStartPos = mainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    isDragging = false
                end
            end)
        end
    end
    
    local function updateDrag(input)
        if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = Vector2.new(input.Position.X, input.Position.Y) - dragStartPos
            mainFrame.Position = UDim2.new(
                frameStartPos.X.Scale, 
                frameStartPos.X.Offset + delta.X, 
                frameStartPos.Y.Scale, 
                frameStartPos.Y.Offset + delta.Y
            )
        end
    end
    
    -- Resize system
    local function startResize(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            isResizing = true
            resizeStartPos = Vector2.new(input.Position.X, input.Position.Y)
            frameStartSize = mainFrame.Size
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    isResizing = false
                end
            end)
        end
    end
    
    local function updateResize(input)
        if isResizing and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = Vector2.new(input.Position.X, input.Position.Y) - resizeStartPos
            local newWidth = math.clamp(frameStartSize.X.Offset + delta.X, 450, 600)
            local newHeight = math.clamp(frameStartSize.Y.Offset + delta.Y, 40, 600)
            
            TweenService:Create(mainFrame, TweenInfo.new(0.1), {
                Size = UDim2.new(0, newWidth, 0, newHeight)
            }):Play()
        end
    end
    
    -- Toggle visibility
    function Window:Toggle()
        Window.Visible = not Window.Visible
        if Window.Visible then
            mainFrame.Visible = true
            TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
                Position = UDim2.new(mainFrame.Position.X.Scale, mainFrame.Position.X.Offset, 0.2, 0),
                Size = UDim2.new(0, 450, 0, 40)
            }):Play()
        else
            TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
                Position = UDim2.new(mainFrame.Position.X.Scale, mainFrame.Position.X.Offset, -0.1, 0),
                Size = UDim2.new(0, 450, 0, 0)
            }):Play()
            delay(0.3, function()
                mainFrame.Visible = false
            end)
        end
    end
    
    -- Close window
    function Window:Destroy()
        TweenService:Create(mainFrame, TweenInfo.new(0.3, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
            Size = UDim2.new(0, 450, 0, 0)
        }):Play()
        delay(0.3, function()
            gui:Destroy()
        end)
    end
    
    -- Minimize window
    local function toggleMinimize()
        if Window.Minimized then
            Window.Minimized = false
            TweenService:Create(mainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
                Size = UDim2.new(0, 450, 0, 400)
            }):Play()
            TweenService:Create(contentFrame, TweenInfo.new(0.4), {
                Size = UDim2.new(1, -10, 1, -50)
            }):Play()
            TweenService:Create(minimizeButton, TweenInfo.new(0.3), {
                TextColor3 = Window.Theme.TextColor
            }):Play()
        else
            Window.Minimized = true
            TweenService:Create(mainFrame, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
                Size = UDim2.new(0, 450, 0, 40)
            }):Play()
            TweenService:Create(contentFrame, TweenInfo.new(0.4), {
                Size = UDim2.new(1, -10, 0, 0)
            }):Play()
            TweenService:Create(minimizeButton, TweenInfo.new(0.3), {
                TextColor3 = Window.Theme.AccentColor
            }):Play()
        end
    end
    
    -- Connect events
    header.InputBegan:Connect(startDrag)
    header.InputChanged:Connect(updateDrag)
    
    resizeButton.InputBegan:Connect(startResize)
    resizeButton.InputChanged:Connect(updateResize)
    
    minimizeButton.MouseButton1Click:Connect(toggleMinimize)
    closeButton.MouseButton1Click:Connect(function()
        Window:Destroy()
    end)
    
    -- Hover effects
    closeButton.MouseEnter:Connect(function()
        TweenService:Create(closeButton, TweenInfo.new(0.2), {
            TextColor3 = Color3.fromRGB(255, 80, 80),
            Size = UDim2.new(0, 32, 0, 32)
        }):Play()
    end)
    
    closeButton.MouseLeave:Connect(function()
        TweenService:Create(closeButton, TweenInfo.new(0.2), {
            TextColor3 = Window.Theme.TextColor,
            Size = UDim2.new(0, 30, 0, 30)
        }):Play()
    end)
    
    minimizeButton.MouseEnter:Connect(function()
        TweenService:Create(minimizeButton, TweenInfo.new(0.2), {
            TextColor3 = Window.Theme.AccentColor,
            Size = UDim2.new(0, 32, 0, 32)
        }):Play()
    end)
    
    minimizeButton.MouseLeave:Connect(function()
        TweenService:Create(minimizeButton, TweenInfo.new(0.2), {
            TextColor3 = Window.Theme.TextColor,
            Size = UDim2.new(0, 30, 0, 30)
        }):Play()
    end)
    
    resizeButton.MouseEnter:Connect(function()
        TweenService:Create(resizeButton, TweenInfo.new(0.2), {
            TextColor3 = Window.Theme.AccentColor,
            Size = UDim2.new(0, 22, 0, 22)
        }):Play()
    end)
    
    resizeButton.MouseLeave:Connect(function()
        TweenService:Create(resizeButton, TweenInfo.new(0.2), {
            TextColor3 = Window.Theme.TextColor,
            Size = UDim2.new(0, 20, 0, 20)
        }):Play()
    end)
    
    -- Hotkey (V to toggle)
    game:GetService("UserInputService").InputBegan:Connect(function(input, processed)
        if not processed and input.KeyCode == Enum.KeyCode.V then
            Window:Toggle()
        end
    end)
    
    -- Dynamic gradient effect
    local hueOffset = 0
    game:GetService("RunService").Heartbeat:Connect(function(dt)
        hueOffset = (hueOffset + 30 * dt) % 360
        
        local topColor = Color3.fromHSV(hueOffset/360, 0.5, 0.6)
        local bottomColor = Color3.fromHSV((hueOffset + 60)/360, 0.4, 0.5)
        
        gradient.Color = ColorSequence.new({topColor, bottomColor})
    end)
    
    -- Метод для создания вкладки
    function Window:CreateTab(name)
        local Tab = {}
        Tab.Name = name or "Tab"
        Tab.Buttons = {}
        
        -- Создаем кнопку вкладки
        local tabButton = Instance.new("TextButton")
        tabButton.Name = name.."TabButton"
        tabButton.Size = UDim2.new(0, 100, 1, 0)
        tabButton.BackgroundColor3 = Window.Theme.SecondaryColor
        tabButton.Text = name
        tabButton.TextColor3 = Window.Theme.TextColor
        tabButton.Font = Enum.Font.GothamBold
        tabButton.TextSize = 12
        tabButton.AutoButtonColor = false
        tabButton.Parent = tabsFrame
        
        local tabCorner = Instance.new("UICorner")
        tabCorner.CornerRadius = UDim.new(0, 6)
        tabCorner.Parent = tabButton
        
        -- Создаем страницу
        local tabPage = Instance.new("ScrollingFrame")
        tabPage.Name = name.."Page"
        tabPage.Size = UDim2.new(1, 0, 1, 0)
        tabPage.Position = UDim2.new(0, 0, 0, 0)
        tabPage.BackgroundTransparency = 1
        tabPage.ScrollBarThickness = 5
        tabPage.ScrollBarImageColor3 = Window.Theme.AccentColor
        tabPage.Visible = false
        tabPage.Parent = pagesFrame
        
        local pageListLayout = Instance.new("UIListLayout")
        pageListLayout.Padding = UDim.new(0, 10)
        pageListLayout.Parent = tabPage
        
        -- Сохраняем элементы
        Tab.Button = tabButton
        Tab.Page = tabPage
        
        -- Делаем первую вкладку активной по умолчанию
        if #Window.Tabs == 0 then
            tabButton.BackgroundColor3 = Window.Theme.AccentColor
            tabPage.Visible = true
        end
        
        -- Функция переключения вкладок
        local function switchToTab()
            for _, otherTab in pairs(Window.Tabs) do
                otherTab.Button.BackgroundColor3 = Window.Theme.SecondaryColor
                otherTab.Page.Visible = false
            end
            
            tabButton.BackgroundColor3 = Window.Theme.AccentColor
            tabPage.Visible = true
        end
        
        tabButton.MouseButton1Click:Connect(switchToTab)
        
        -- Эффекты при наведении
        tabButton.MouseEnter:Connect(function()
            if tabButton.BackgroundColor3 ~= Window.Theme.AccentColor then
                TweenService:Create(tabButton, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(
                        math.floor(Window.Theme.SecondaryColor.R * 255 + 20),
                        math.floor(Window.Theme.SecondaryColor.G * 255 + 20),
                        math.floor(Window.Theme.SecondaryColor.B * 255 + 20)
                    )
                }):Play()
            end
        end)
        
        tabButton.MouseLeave:Connect(function()
            if tabButton.BackgroundColor3 ~= Window.Theme.AccentColor then
                TweenService:Create(tabButton, TweenInfo.new(0.2), {
                    BackgroundColor3 = Window.Theme.SecondaryColor
                }):Play()
            end
        end)
        
        -- Методы для элементов управления
        function Tab:CreateButton(name, callback)
            local Button = {}
            Button.Name = name
            Button.Callback = callback or function() end
            
            local button = Instance.new("TextButton")
            button.Name = name.."Button"
            button.Size = UDim2.new(1, 0, 0, 35)
            button.BackgroundColor3 = Window.Theme.SecondaryColor
            button.Text = name
            button.TextColor3 = Window.Theme.TextColor
            button.Font = Enum.Font.GothamMedium
            button.TextSize = 12
            button.AutoButtonColor = false
            button.Parent = tabPage
            
            local buttonCorner = Instance.new("UICorner")
            buttonCorner.CornerRadius = UDim.new(0, 6)
            buttonCorner.Parent = button
            
            local buttonGradient = Instance.new("UIGradient")
            buttonGradient.Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Window.Theme.SecondaryColor),
                ColorSequenceKeypoint.new(1, Window.Theme.MainColor)
            })
            buttonGradient.Rotation = 90
            buttonGradient.Parent = button
            
            -- Эффекты кнопки
            button.MouseEnter:Connect(function()
                TweenService:Create(button, TweenInfo.new(0.2), {
                    BackgroundColor3 = Color3.fromRGB(
                        math.floor(Window.Theme.SecondaryColor.R * 255 + 20),
                        math.floor(Window.Theme.SecondaryColor.G * 255 + 20),
                        math.floor(Window.Theme.SecondaryColor.B * 255 + 20)
                    ),
                    Size = UDim2.new(1, 5, 0, 35)
                }):Play()
            end)
            
            button.MouseLeave:Connect(function()
                TweenService:Create(button, TweenInfo.new(0.2), {
                    BackgroundColor3 = Window.Theme.SecondaryColor,
                    Size = UDim2.new(1, 0, 0, 35)
                }):Play()
            end)
            
            button.MouseButton1Down:Connect(function()
                TweenService:Create(button, TweenInfo.new(0.1), {
                    BackgroundColor3 = Window.Theme.AccentColor
                }):Play()
            end)
            
            button.MouseButton1Up:Connect(function()
                TweenService:Create(button, TweenInfo.new(0.3), {
                    BackgroundColor3 = Color3.fromRGB(
                        math.floor(Window.Theme.SecondaryColor.R * 255 + 20),
                        math.floor(Window.Theme.SecondaryColor.G * 255 + 20),
                        math.floor(Window.Theme.SecondaryColor.B * 255 + 20)
                    )
                }):Play()
                Button.Callback()
            end)
            
            Button.Instance = button
            table.insert(Tab.Buttons, Button)
            return Button
        end
        
        -- Другие методы (Toggle, Slider, Textbox и т.д.) можно добавить аналогично
        
        table.insert(Window.Tabs, Tab)
        return Tab
    end
    
    -- Развернуть окно после создания
    toggleMinimize()
    
    return Window
end

return MoonLib
