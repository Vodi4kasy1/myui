-- Heny UI Library with Animations and Additional Features
local HenyLib = {}

-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Create Main UI
function HenyLib:CreateUI(title)
    local ScreenGui = Instance.new("ScreenGui", game.Players.LocalPlayer:WaitForChild("PlayerGui"))
    ScreenGui.ResetOnSpawn = false

    local MainFrame = Instance.new("Frame", ScreenGui)
    MainFrame.Size = UDim2.new(0, 400, 0, 300)
    MainFrame.Position = UDim2.new(0.5, -200, 0.5, -150)
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    MainFrame.ClipsDescendants = true

    local UICorner = Instance.new("UICorner", MainFrame)
    UICorner.CornerRadius = UDim.new(0, 8)

    local TitleBar = Instance.new("TextLabel", MainFrame)
    TitleBar.Size = UDim2.new(1, 0, 0, 25)
    TitleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    TitleBar.Text = title or "Heny UI"
    TitleBar.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleBar.Font = Enum.Font.SourceSans
    TitleBar.TextSize = 20

    local UICornerTitle = Instance.new("UICorner", TitleBar)
    UICornerTitle.CornerRadius = UDim.new(0, 8)

    -- Draggable functionality
    local dragging, dragStart, startPos

    MainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
        end
    end)

    MainFrame.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    -- Close Button
    local CloseButton = Instance.new("TextButton", MainFrame)
    CloseButton.Size = UDim2.new(0, 25, 0, 25)
    CloseButton.Position = UDim2.new(1, -30, 0, 5)
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)

    CloseButton.MouseButton1Click:Connect(function()
        local tween = TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(0, 0, 0, 0), Position = UDim2.new(0.5, 0, 0.5, 0)})
        tween:Play()
        tween.Completed:Connect(function()
            MainFrame:Destroy()
        end)
    end)

    -- Hide/Show GUI with RightAlt
    local hidden = false
    UserInputService.InputBegan:Connect(function(input, processed)
        if not processed and input.KeyCode == Enum.KeyCode.RightAlt then
            hidden = not hidden
            if hidden then
                -- Animate transparency to 1 (hidden)
                local tween = TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1})
                for _, child in pairs(MainFrame:GetDescendants()) do
                    if child:IsA("GuiObject") then
                        TweenService:Create(child, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {BackgroundTransparency = 1}):Play()
                    end
                end
                tween:Play()
                tween.Completed:Connect(function()
                    MainFrame.Visible = false
                end)
            else
                -- Make frame visible and animate transparency to 0
                MainFrame.Visible = true
                local tween = TweenService:Create(MainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {BackgroundTransparency = 0})
                for _, child in pairs(MainFrame:GetDescendants()) do
                    if child:IsA("GuiObject") then
                        TweenService:Create(child, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {BackgroundTransparency = 0}):Play()
                    end
                end
                tween:Play()
            end
        end
    end)

    -- Container for tabs
    local TabContainer = Instance.new("Frame", MainFrame)
    TabContainer.Size = UDim2.new(0, 100, 1, -25)
    TabContainer.Position = UDim2.new(0, 0, 0, 25)
    TabContainer.BackgroundColor3 = Color3.fromRGB(60, 60, 60)

    local TabUICorner = Instance.new("UICorner", TabContainer)
    TabUICorner.CornerRadius = UDim.new(0, 8)

    -- Container for content
    local ContentContainer = Instance.new("Frame", MainFrame)
    ContentContainer.Size = UDim2.new(1, -100, 1, -25)
    ContentContainer.Position = UDim2.new(0, 100, 0, 25)
    ContentContainer.BackgroundColor3 = Color3.fromRGB(45, 45, 45)

    local ContentUICorner = Instance.new("UICorner", ContentContainer)
    ContentUICorner.CornerRadius = UDim.new(0, 8)

    -- Tabs and Elements Storage
    self.Tabs = {}
    self.Elements = {}
    self.TabContainer = TabContainer
    self.ContentContainer = ContentContainer
    self.MainFrame = MainFrame
    return self
end

-- Add a toggle
function HenyLib:AddToggle(tabFrame, toggleText, defaultState, callback)
    local ToggleFrame = Instance.new("Frame", tabFrame)
    ToggleFrame.Size = UDim2.new(1, -20, 0, 30)
    ToggleFrame.Position = UDim2.new(0, 10, 0, (#tabFrame:GetChildren() - 1) * 40)
    ToggleFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)

    local ToggleUICorner = Instance.new("UICorner", ToggleFrame)
    ToggleUICorner.CornerRadius = UDim.new(0, 6)

    local ToggleLabel = Instance.new("TextLabel", ToggleFrame)
    ToggleLabel.Size = UDim2.new(0.8, -20, 1, 0)
    ToggleLabel.Position = UDim2.new(0, 10, 0, 0)
    ToggleLabel.Text = toggleText
    ToggleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleLabel.BackgroundTransparency = 1
    ToggleLabel.Font = Enum.Font.SourceSans
    ToggleLabel.TextSize = 16

    local ToggleButton = Instance.new("TextButton", ToggleFrame)
    ToggleButton.Size = UDim2.new(0, 20, 0, 20)
    ToggleButton.Position = UDim2.new(1, -30, 0.5, -10)
    ToggleButton.Text = ""
    ToggleButton.BackgroundColor3 = defaultState and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)

    local ButtonUICorner = Instance.new("UICorner", ToggleButton)
    ButtonUICorner.CornerRadius = UDim.new(1, 0)

    local state = defaultState

    ToggleButton.MouseButton1Click:Connect(function()
        state = not state
        ToggleButton.BackgroundColor3 = state and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
        callback(state)
    end)
end

-- Add a dropdown
function HenyLib:AddDropdown(tabFrame, dropdownText, options, callback)
    local DropdownFrame = Instance.new("Frame", tabFrame)
    DropdownFrame.Size = UDim2.new(1, -20, 0, 30)
    DropdownFrame.Position = UDim2.new(0, 10, 0, (#tabFrame:GetChildren() - 1) * 40)
    DropdownFrame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)

    local DropdownUICorner = Instance.new("UICorner", DropdownFrame)
    DropdownUICorner.CornerRadius = UDim.new(0, 6)

    local DropdownLabel = Instance.new("TextLabel", DropdownFrame)
    DropdownLabel.Size = UDim2.new(0.8, -20, 1, 0)
    DropdownLabel.Position = UDim2.new(0, 10, 0, 0)
    DropdownLabel.Text = dropdownText
    DropdownLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownLabel.BackgroundTransparency = 1
    DropdownLabel.Font = Enum.Font.SourceSans
    DropdownLabel.TextSize = 16

    local DropdownButton = Instance.new("TextButton", DropdownFrame)
    DropdownButton.Size = UDim2.new(0.2, -10, 1, 0)
    DropdownButton.Position = UDim2.new(0.8, 10, 0, 0)
    DropdownButton.Text = "â–¼"
    DropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownButton.BackgroundColor3 = Color3.fromRGB(100, 100, 100)

    local ButtonUICorner = Instance.new("UICorner", DropdownButton)
    ButtonUICorner.CornerRadius = UDim.new(0, 6)

    local OptionsFrame = Instance.new("Frame", tabFrame)
    OptionsFrame.Size = UDim2.new(1, -20, 0, #options * 30)
    OptionsFrame.Position = UDim2.new(0, 10, 0, DropdownFrame.Position.Y.Offset + 35)
    OptionsFrame.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    OptionsFrame.Visible = false

    local OptionsUICorner = Instance.new("UICorner", OptionsFrame)
    OptionsUICorner.CornerRadius = UDim.new(0, 6)

    for i, option in pairs(options) do
        local OptionButton = Instance.new("TextButton", OptionsFrame)
        OptionButton.Size = UDim2.new(1, -10, 0, 30)
        OptionButton.Position = UDim2.new(0, 5, 0, (i - 1) * 30)
        OptionButton.Text = option
        OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        OptionButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)

        local OptionUICorner = Instance.new("UICorner", OptionButton)
        OptionUICorner.CornerRadius = UDim.new(0, 6)

        OptionButton.MouseButton1Click:Connect(function()
            callback(option)
            DropdownLabel.Text = dropdownText .. ": " .. option
            OptionsFrame.Visible = false
        end)
    end

    DropdownButton.MouseButton1Click:Connect(function()
        OptionsFrame.Visible = not OptionsFrame.Visible
    end)
end

-- Other functions remain unchanged

return HenyLib
