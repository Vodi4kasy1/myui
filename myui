-- HenyLib UI Library
local HenyLib = {}

-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Create UI elements with smooth corners and animations
local function createUIElement(elementType, properties)
    local element = Instance.new(elementType)
    for prop, value in pairs(properties) do
        element[prop] = value
    end

    if element:IsA("GuiObject") then
        local uiCorner = Instance.new("UICorner")
        uiCorner.CornerRadius = UDim.new(0, 8) -- Smooth corners
        uiCorner.Parent = element
    end

    return element
end

-- Animation helpers
local function animateObject(object, properties, duration, easingStyle, easingDirection)
    local tween = TweenService:Create(object, TweenInfo.new(duration, easingStyle, easingDirection), properties)
    tween:Play()
    return tween
end

-- Create Window
function HenyLib:CreateWindow(title)
    local screenGui = createUIElement("ScreenGui", {ResetOnSpawn = false})
    screenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    -- Main Window Frame
    local window = createUIElement("Frame", {
        Size = UDim2.new(0, 600, 0, 400),
        BackgroundColor3 = Color3.fromRGB(45, 45, 45),
        AnchorPoint = Vector2.new(0.5, 0.5),
        Position = UDim2.new(0.5, 0, 0.5, 0)
    })
    window.Parent = screenGui

    -- Title Bar
    local titleBar = createUIElement("TextLabel", {
        Size = UDim2.new(1, 0, 0, 40),
        BackgroundColor3 = Color3.fromRGB(35, 35, 35),
        Text = title,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Font = Enum.Font.SourceSansBold,
        TextSize = 20
    })
    titleBar.Parent = window

    -- Sidebar (on the left for tabs)
    local sidebar = createUIElement("Frame", {
        Size = UDim2.new(0, 150, 1, 0),
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        Position = UDim2.new(0, 0, 0, 0)
    })
    sidebar.Parent = window

    -- Main Content Frame (where tabs will show)
    local mainContent = createUIElement("Frame", {
        Size = UDim2.new(1, -150, 1, -40),
        Position = UDim2.new(0, 150, 0, 40),
        BackgroundColor3 = Color3.fromRGB(55, 55, 55)
    })
    mainContent.Parent = window

    -- Drag functionality for window
    local dragging = false
    local dragInput, dragStart, startPos

    titleBar.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = window.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    titleBar.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - dragStart
            window.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    return window, sidebar, mainContent
end

-- Create Tab Button (inside Sidebar)
function HenyLib:CreateTabButton(sidebar, name, callback)
    local button = createUIElement("TextButton", {
        Size = UDim2.new(1, 0, 0, 50),
        BackgroundColor3 = Color3.fromRGB(50, 50, 50),
        Text = name,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Font = Enum.Font.SourceSans,
        TextSize = 18
    })
    button.Parent = sidebar

    button.MouseButton1Click:Connect(function()
        if callback then
            callback()
        end
    end)

    return button
end

-- Create a Tab (main content area)
function HenyLib:CreateTabContent(mainContent, name)
    local tab = createUIElement("Frame", {
        Size = UDim2.new(1, 0, 1, 0),
        BackgroundColor3 = Color3.fromRGB(45, 45, 45),
        Visible = false -- Initially hidden
    })
    tab.Parent = mainContent

    local tabLabel = createUIElement("TextLabel", {
        Size = UDim2.new(1, 0, 0, 40),
        BackgroundColor3 = Color3.fromRGB(35, 35, 35),
        Text = "Welcome to " .. name,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Font = Enum.Font.SourceSansBold,
        TextSize = 22
    })
    tabLabel.Parent = tab

    return tab
end

-- Create Label
function HenyLib:CreateLabel(parent, text)
    local label = createUIElement("TextLabel", {
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundTransparency = 1,
        Text = text,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Font = Enum.Font.SourceSans,
        TextSize = 18,
        Position = UDim2.new(0, 5, 0, 5)
    })
    label.Parent = parent

    return label
end

-- Create TextBox
function HenyLib:CreateTextBox(parent, placeholder)
    local textbox = createUIElement("TextBox", {
        Size = UDim2.new(1, -10, 0, 30),
        BackgroundColor3 = Color3.fromRGB(60, 60, 60),
        Text = "",
        PlaceholderText = placeholder,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Font = Enum.Font.SourceSans,
        TextSize = 18,
        Position = UDim2.new(0, 5, 0, 40)
    })
    textbox.Parent = parent

    return textbox
end

-- Create Button
function HenyLib:CreateButton(parent, text, callback)
    local button = createUIElement("TextButton", {
        Size = UDim2.new(1, -10, 0, 40),
        BackgroundColor3 = Color3.fromRGB(65, 65, 65),
        Text = text,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Font = Enum.Font.SourceSansBold,
        TextSize = 18,
        Position = UDim2.new(0, 5, 0, 80)
    })
    button.Parent = parent

    button.MouseButton1Click:Connect(function()
        if callback then
            callback()
        end
    end)

    return button
end

-- Create Slider
function HenyLib:CreateSlider(parent, minValue, maxValue, callback)
    local slider = createUIElement("Frame", {
        Size = UDim2.new(1, -10, 0, 30),
        BackgroundColor3 = Color3.fromRGB(60, 60, 60),
        Position = UDim2.new(0, 5, 0, 120)
    })
    slider.Parent = parent

    local sliderButton = createUIElement("Frame", {
        Size = UDim2.new(0, 10, 1, 0),
        BackgroundColor3 = Color3.fromRGB(255, 0, 0),
        Position = UDim2.new(0, 0, 0, 0)
    })
    sliderButton.Parent = slider

    local label = createUIElement("TextLabel", {
        Size = UDim2.new(1, 0, 0, 20),
        BackgroundTransparency = 1,
        Text = minValue,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        Font = Enum.Font.SourceSans,
        TextSize = 18,
        Position = UDim2.new(0, 0, 1, 5)
    })
    label.Parent = slider

    local dragging = false
    sliderButton.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
        end
    end)

    UserInputService.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local deltaX = input.Position.X - slider.AbsolutePosition.X
            local sliderPosition = math.clamp(deltaX, 0, slider.AbsoluteSize.X)
            sliderButton.Position = UDim2.new(0, sliderPosition, 0, 0)
            local value = math.floor((sliderPosition / slider.AbsoluteSize.X) * (maxValue - minValue) + minValue)
            label.Text = value
            if callback then
                callback(value)
            end
        end
    end)

    return slider
end

-- Create Toggle
function HenyLib:CreateToggle(parent, text, callback)
    local toggleFrame = createUIElement("Frame", {
        Size = UDim2.new(1, -10, 0, 30),
