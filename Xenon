-- Xenon UI Library v7.0 (Fully Working Version)
local Xenon = {}
Xenon.__index = Xenon

-- Services
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")

-- Helper function to create instances
local function CreateInstance(className, properties)
    local instance = Instance.new(className)
    for property, value in pairs(properties) do
        instance[property] = value
    end
    return instance
end

-- Main constructor
function Xenon.new(config)
    config = config or {}
    
    local self = setmetatable({
        AccentColor = config.AccentColor or Color3.fromRGB(0, 170, 255),
        DarkColor = config.DarkColor or Color3.fromRGB(20, 20, 25),
        LightColor = config.LightColor or Color3.fromRGB(240, 240, 240),
        WindowSize = config.WindowSize or UDim2.new(0, 600, 0, 400),
        WindowPosition = config.WindowPosition or UDim2.new(0.5, -300, 0.5, -200),
        Tabs = {},
        CurrentTab = nil,
        Elements = {},
        Opened = false
    }, Xenon)
    
    -- Create main UI components
    self.ScreenGui = CreateInstance("ScreenGui", {
        Name = "XenonUI",
        ResetOnSpawn = false,
        Parent = Players.LocalPlayer:WaitForChild("PlayerGui")
    })
    
    self.MainFrame = CreateInstance("Frame", {
        Name = "MainWindow",
        Size = UDim2.new(0, 0, 0, 0),
        Position = self.WindowPosition,
        BackgroundColor3 = self.DarkColor,
        BackgroundTransparency = 0.05,
        Parent = self.ScreenGui
    })
    
    CreateInstance("UICorner", {
        CornerRadius = UDim.new(0, 8),
        Parent = self.MainFrame
    })
    
    -- Top bar
    self.TopBar = CreateInstance("Frame", {
        Name = "TopBar",
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundColor3 = Color3.fromRGB(15, 15, 20),
        Parent = self.MainFrame
    })
    
    self.Title = CreateInstance("TextLabel", {
        Name = "Title",
        Text = "XENON UI",
        Font = Enum.Font.GothamBold,
        TextSize = 14,
        TextColor3 = self.LightColor,
        Size = UDim2.new(0, 200, 1, 0),
        Position = UDim2.new(0, 15, 0, 0),
        BackgroundTransparency = 1,
        Parent = self.TopBar
    })
    
    self.CloseButton = CreateInstance("TextButton", {
        Name = "CloseButton",
        Text = "Ã—",
        Font = Enum.Font.GothamBold,
        TextSize = 18,
        TextColor3 = self.LightColor,
        Size = UDim2.new(0, 30, 1, 0),
        Position = UDim2.new(1, -30, 0, 0),
        BackgroundTransparency = 1,
        Parent = self.TopBar
    })
    
    -- Tab buttons
    self.TabButtonsFrame = CreateInstance("Frame", {
        Name = "TabButtons",
        Size = UDim2.new(1, 0, 0, 40),
        Position = UDim2.new(0, 0, 0, 30),
        BackgroundTransparency = 1,
        Parent = self.MainFrame
    })
    
    -- Tabs container
    self.TabsContainer = CreateInstance("Frame", {
        Name = "TabsContainer",
        Size = UDim2.new(1, 0, 1, -70),
        Position = UDim2.new(0, 0, 0, 70),
        BackgroundTransparency = 1,
        Parent = self.MainFrame
    })
    
    -- Close functionality
    self.CloseButton.MouseButton1Click:Connect(function()
        self:Close()
    end)
    
    return self
end

-- Tab methods
function Xenon:NewTab(name)
    local tab = {
        Name = name,
        Button = CreateInstance("TextButton", {
            Name = name.."TabButton",
            Text = name,
            Font = Enum.Font.Gotham,
            TextSize = 13,
            TextColor3 = self.LightColor,
            Size = UDim2.new(0, 100, 1, 0),
            Position = UDim2.new(0, #self.Tabs * 100, 0, 0),
            BackgroundTransparency = 1,
            Parent = self.TabButtonsFrame
        }),
        Frame = CreateInstance("Frame", {
            Name = name.."Tab",
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            Visible = false,
            Parent = self.TabsContainer
        }),
        Sections = {}
    }
    
    tab.Button.MouseButton1Click:Connect(function()
        self:SwitchTab(tab)
    end)
    
    table.insert(self.Tabs, tab)
    
    if #self.Tabs == 1 then
        self:SwitchTab(tab)
    end
    
    return tab
end

function Xenon:SwitchTab(tab)
    for _, t in ipairs(self.Tabs) do
        t.Frame.Visible = false
    end
    tab.Frame.Visible = true
    self.CurrentTab = tab
end

-- Section methods
function Xenon:NewSection(tab, name)
    local section = {
        Name = name,
        Content = CreateInstance("Frame", {
            Name = name.."Section",
            Size = UDim2.new(0.3, -10, 1, -10),
            Position = UDim2.new(0, 5 + (#tab.Sections * 200), 0, 5),
            BackgroundColor3 = Color3.fromRGB(30, 30, 35),
            Parent = tab.Frame
        })
    }
    
    CreateInstance("UICorner", {
        CornerRadius = UDim.new(0, 6),
        Parent = section.Content
    })
    
    section.Title = CreateInstance("TextLabel", {
        Text = name,
        Font = Enum.Font.GothamBold,
        TextSize = 14,
        TextColor3 = self.LightColor,
        Size = UDim2.new(1, -10, 0, 30),
        Position = UDim2.new(0, 5, 0, 0),
        BackgroundTransparency = 1,
        Parent = section.Content
    })
    
    section.ContentFrame = CreateInstance("Frame", {
        Size = UDim2.new(1, -10, 1, -40),
        Position = UDim2.new(0, 5, 0, 35),
        BackgroundTransparency = 1,
        Parent = section.Content
    })
    
    table.insert(tab.Sections, section)
    return section
end

-- UI Elements
function Xenon:NewButton(section, config)
    config = config or {}
    
    local button = CreateInstance("TextButton", {
        Text = config.Text or "Button",
        Font = Enum.Font.Gotham,
        TextSize = 13,
        TextColor3 = self.LightColor,
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundColor3 = Color3.fromRGB(40, 40, 45),
        AutoButtonColor = false,
        Parent = section.ContentFrame
    })
    
    CreateInstance("UICorner", {
        CornerRadius = UDim.new(0, 4),
        Parent = button
    })
    
    -- Hover effects
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {
            BackgroundColor3 = Color3.fromRGB(50, 50, 55)
        }):Play()
    end)
    
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {
            BackgroundColor3 = Color3.fromRGB(40, 40, 45)
        }):Play()
    end)
    
    -- Click effects
    button.MouseButton1Click:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.1), {
            BackgroundColor3 = self.AccentColor
        }):Play()
        task.wait(0.1)
        TweenService:Create(button, TweenInfo.new(0.1), {
            BackgroundColor3 = Color3.fromRGB(40, 40, 45)
        }):Play()
        if config.Callback then config.Callback() end
    end)
    
    return button
end

-- Window management
function Xenon:Open()
    if self.Opened then return end
    self.Opened = true
    
    self.MainFrame.Visible = true
    TweenService:Create(self.MainFrame, TweenInfo.new(0.5), {
        Size = self.WindowSize
    }):Play()
end

function Xenon:Close()
    if not self.Opened then return end
    self.Opened = false
    
    TweenService:Create(self.MainFrame, TweenInfo.new(0.3), {
        Size = UDim2.new(0, 0, 0, 0)
    }):Play()
end

function Xenon:Toggle()
    if self.Opened then
        self:Close()
    else
        self:Open()
    end
end

return Xenon
