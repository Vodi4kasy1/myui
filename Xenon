local Xenon = {}

local theme = {
    Primary = Color3.fromRGB(28, 28, 28),
    Secondary = Color3.fromRGB(45, 45, 45),
    Accent = Color3.fromRGB(100, 255, 255),
    Text = Color3.fromRGB(255, 255, 255),
    Glow = Color3.fromRGB(150, 255, 255)
}

local function applyNeon(element)
    local stroke = Instance.new("UIStroke")
    stroke.Color = theme.Glow
    stroke.Thickness = 2
    stroke.Transparency = 0.7
    stroke.Parent = element
    
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, theme.Glow),
        ColorSequenceKeypoint.new(1, Color3.new(1,1,1))
    })
    gradient.Parent = stroke
    
    return stroke
end

function Xenon.NewWindow(title)
    local self = {}
    local gui = Instance.new("ScreenGui")
    gui.ResetOnSpawn = false
    gui.ZIndexBehavior = Enum.ZIndexBehavior.Global
    gui.Parent = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

    local mainFrame = Instance.new("Frame")
    mainFrame.Size = UDim2.new(0, 350, 0, 400)
    mainFrame.Position = UDim2.new(0.5, -175, 0.5, -200)
    mainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    mainFrame.BackgroundColor3 = theme.Primary
    mainFrame.ClipsDescendants = true
    
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 8)
    corner.Parent = mainFrame
    
    applyNeon(mainFrame)
    
    local content = Instance.new("Frame")
    content.Size = UDim2.new(1, -20, 1, -50)
    content.Position = UDim2.new(0, 10, 0, 40)
    content.BackgroundTransparency = 1
    content.Parent = mainFrame
    
    local layout = Instance.new("UIListLayout")
    layout.Padding = UDim.new(0, 5)
    layout.Parent = content
    
    -- Header
    local header = Instance.new("Frame")
    header.Size = UDim2.new(1, 0, 0, 30)
    header.BackgroundColor3 = theme.Secondary
    header.Parent = mainFrame
    
    local titleLabel = Instance.new("TextLabel")
    titleLabel.Text = title
    titleLabel.Font = Enum.Font.GothamBold
    titleLabel.TextColor3 = theme.Text
    titleLabel.Size = UDim2.new(1, -10, 1, 0)
    titleLabel.Position = UDim2.new(0, 10, 0, 0)
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    titleLabel.Parent = header
    
    -- Mobile optimization
    if game:GetService("UserInputService").TouchEnabled then
        mainFrame.Size = UDim2.new(0.9, 0, 0.8, 0)
        mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
    end

    -- Универсальный обработчик кликов
    local function handleInput(inputObject, callback)
        local isTouch = inputObject.UserInputType == Enum.UserInputType.Touch
        local isMouse = inputObject.UserInputType == Enum.UserInputType.MouseButton1
        
        if isTouch or isMouse then
            callback()
        end
    end

    function self:AddButton(text, callback)
        local button = Instance.new("TextButton")
        button.Size = UDim2.new(1, 0, 0, 40)
        button.BackgroundColor3 = theme.Secondary
        button.Text = text
        button.Font = Enum.Font.GothamMedium
        button.TextColor3 = theme.Text
        button.AutoButtonColor = false
        button.Parent = content
        
        applyNeon(button)
        
        button.InputBegan:Connect(function(input)
            handleInput(input, function()
                game.TweenService:Create(button, TweenInfo.new(0.1), {
                    BackgroundColor3 = theme.Accent
                }):Play()
            end)
        end)
        
        button.InputEnded:Connect(function(input)
            handleInput(input, function()
                game.TweenService:Create(button, TweenInfo.new(0.2), {
                    BackgroundColor3 = theme.Secondary
                }):Play()
                callback()
            end)
        end)
        
        return button
    end

    function self:AddToggle(text, default, callback)
        local toggle = Instance.new("TextButton")
        toggle.Size = UDim2.new(1, 0, 0, 40)
        toggle.BackgroundColor3 = theme.Secondary
        toggle.Text = ""
        toggle.AutoButtonColor = false
        toggle.Parent = content
        
        local state = default or false
        local indicator = Instance.new("Frame")
        indicator.Size = UDim2.new(0, 30, 0, 30)
        indicator.Position = UDim2.new(1, -35, 0.5, -15)
        indicator.AnchorPoint = Vector2.new(1, 0.5)
        indicator.BackgroundColor3 = state and theme.Accent or Color3.new(0.3, 0.3, 0.3)
        indicator.Parent = toggle
        
        local label = Instance.new("TextLabel")
        label.Text = text
        label.Font = Enum.Font.GothamMedium
        label.TextColor3 = theme.Text
        label.Size = UDim2.new(1, -50, 1, 0)
        label.TextXAlignment = Enum.TextXAlignment.Left
        label.Parent = toggle
        
        applyNeon(toggle)
        applyNeon(indicator)
        
        local function updateState()
            state = not state
            game.TweenService:Create(indicator, TweenInfo.new(0.2), {
                BackgroundColor3 = state and theme.Accent or Color3.new(0.3, 0.3, 0.3)
            }:Play()
            callback(state)
        end
        
        toggle.InputBegan:Connect(function(input)
            handleInput(input, updateState)
        end)
        
        return toggle
    end

    -- Остальные элементы (Slider, Dropdown) добавляются аналогично
    
    mainFrame.Parent = gui
    return self
end

return Xenon
